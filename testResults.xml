<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="15" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="1" invalid="0" date="2022-10-12" time="22:47:02">
  <environment machine-name="EXCALIBUR" os-version="10.0.19044" clr-version="Unknown" user="Sean" cwd="C:\Users\Sean\source\repos\ConvertFrom-RegEx" nunit-version="2.5.8.0" platform="Microsoft Windows 10 Pro for Workstations|C:\WINDOWS|\Device\Harddisk3\Partition4" user-domain="EXCALIBUR" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Ignored" success="True" time="3.9583" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Users\Sean\source\repos\ConvertFrom-RegEx\ConvertFrom-Regex.Tests\Functional.Tests.ps1" executed="True" result="Success" success="True" time="3.6356" asserts="0" description="C:\Users\Sean\source\repos\ConvertFrom-RegEx\ConvertFrom-Regex.Tests\Functional.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="ConvertFrom-RegEx" executed="True" result="Success" success="True" time="3.1935" asserts="0" description="ConvertFrom-RegEx">
            <results>
              <test-suite type="TestFixture" name="ConvertFrom-RegEx.Output Comparison" executed="True" result="Success" success="True" time="0.456" asserts="0" description="ConvertFrom-RegEx.Output Comparison">
                <results>
                  <test-suite type="ParameterizedTest" name="ConvertFrom-RegEx.Output Comparison.Should parse file &lt;inputfile&gt; with regex &lt;regexfile&gt;" executed="True" result="Success" success="True" time="0.1109" asserts="0" description="Should parse file &lt;inputfile&gt; with regex &lt;regexfile&gt;">
                    <results>
                      <test-case description="Should parse file .\ConvertFrom-Regex.Tests\SyslogTest.log with regex .\ConvertFrom-Regex.Tests\SyslogRegex.rgx" name="ConvertFrom-RegEx.Output Comparison.Should parse file .\ConvertFrom-Regex.Tests\SyslogTest.log with regex .\ConvertFrom-Regex.Tests\SyslogRegex.rgx" time="0.1109" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                  <test-suite type="ParameterizedTest" name="ConvertFrom-RegEx.Output Comparison.Should return expected value for &quot;&lt;inputstring&gt;&quot; (&lt;regex&gt;)" executed="True" result="Success" success="True" time="0.2988" asserts="0" description="Should return expected value for &quot;&lt;inputstring&gt;&quot; (&lt;regex&gt;)">
                    <results>
                      <test-case description="Should return expected value for &quot;A=1, B=2, C=3&quot; (A=(?&lt;A&gt;\d+), B=(?&lt;B&gt;\d+), (?:C=(?&lt;C&gt;\d+)[,\s]*)+)" name="ConvertFrom-RegEx.Output Comparison.Should return expected value for &quot;A=1, B=2, C=3&quot; (A=(?&lt;A&gt;\d+), B=(?&lt;B&gt;\d+), (?:C=(?&lt;C&gt;\d+)[,\s]*)+)" time="0.2389" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should return expected value for &quot;A=1, B=2, C=3, C=4&quot; (A=(?&lt;A&gt;\d+), B=(?&lt;B&gt;\d+), (?:C=(?&lt;C&gt;\d+)[,\s]*)+)" name="ConvertFrom-RegEx.Output Comparison.Should return expected value for &quot;A=1, B=2, C=3, C=4&quot; (A=(?&lt;A&gt;\d+), B=(?&lt;B&gt;\d+), (?:C=(?&lt;C&gt;\d+)[,\s]*)+)" time="0.0257" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should return expected value for &quot;A=1, B=2, C=3, C=4 | A=3, B=4, C=5, C=6&quot; (A=(?&lt;A&gt;\d+), B=(?&lt;B&gt;\d+), (?:C=(?&lt;C&gt;\d+)[,\s]*)+)" name="ConvertFrom-RegEx.Output Comparison.Should return expected value for &quot;A=1, B=2, C=3, C=4 | A=3, B=4, C=5, C=6&quot; (A=(?&lt;A&gt;\d+), B=(?&lt;B&gt;\d+), (?:C=(?&lt;C&gt;\d+)[,\s]*)+)" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                      <test-case description="Should return expected value for &quot;A=1, B=2, C=3, C=4 | A=3, B=4, C=5, C=6&quot; (A=(?&lt;A&gt;\d+), B=(?&lt;B&gt;\d+), (?:C=(?&lt;C&gt;\d+)[,\s]*)+)" name="ConvertFrom-RegEx.Output Comparison.Should return expected value for &quot;A=1, B=2, C=3, C=4 | A=3, B=4, C=5, C=6&quot; (A=(?&lt;A&gt;\d+), B=(?&lt;B&gt;\d+), (?:C=(?&lt;C&gt;\d+)[,\s]*)+)" time="0.0217" asserts="0" success="True" result="Success" executed="True" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Sean\source\repos\ConvertFrom-RegEx\ConvertFrom-Regex.Tests\Organizational.Tests.ps1" executed="True" result="Ignored" success="True" time="0.3227" asserts="0" description="C:\Users\Sean\source\repos\ConvertFrom-RegEx\ConvertFrom-Regex.Tests\Organizational.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Static Tests" executed="True" result="Ignored" success="True" time="0.1967" asserts="0" description="Static Tests">
            <results>
              <test-suite type="TestFixture" name="Static Tests.Module Layout" executed="True" result="Ignored" success="True" time="0.1947" asserts="0" description="Static Tests.Module Layout">
                <results>
                  <test-suite type="TestFixture" name="Static Tests.Module Layout.Function Files" executed="True" result="Ignored" success="True" time="0.1928" asserts="0" description="Static Tests.Module Layout.Function Files">
                    <results>
                      <test-suite type="TestFixture" name="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx" executed="True" result="Success" success="True" time="0.1627" asserts="0" description="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx">
                        <results>
                          <test-suite type="TestFixture" name="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx.Syntax" executed="True" result="Success" success="True" time="0.0714" asserts="0" description="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx.Syntax">
                            <results>
                              <test-case description="Should not be empty" name="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx.Syntax.Should not be empty" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
                              <test-case description="Should be syntactically valid" name="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx.Syntax.Should be syntactically valid" time="0.0262" asserts="0" success="True" result="Success" executed="True" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx.Structure" executed="True" result="Success" success="True" time="0.1534" asserts="0" description="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx.Structure">
                            <results>
                              <test-case description="Should contain no named blocks" name="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx.Structure.Should contain no named blocks" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                              <test-case description="Should contain a single function definition, named &quot;ConvertFrom-RegEx&quot;" name="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx.Structure.Should contain a single function definition, named &quot;ConvertFrom-RegEx&quot;" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                              <test-case description="Should have comment-based help [Public functions only]" name="Static Tests.Module Layout.Function Files.ConvertFrom-RegEx.Structure.Should have comment-based help [Public functions only]" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="Static Tests.Module Layout.Function Files.Assert-ValidCGRegex" executed="True" result="Ignored" success="True" time="0.1846" asserts="0" description="Static Tests.Module Layout.Function Files.Assert-ValidCGRegex">
                        <results>
                          <test-suite type="TestFixture" name="Static Tests.Module Layout.Function Files.Assert-ValidCGRegex.Syntax" executed="True" result="Success" success="True" time="0.0057" asserts="0" description="Static Tests.Module Layout.Function Files.Assert-ValidCGRegex.Syntax">
                            <results>
                              <test-case description="Should not be empty" name="Static Tests.Module Layout.Function Files.Assert-ValidCGRegex.Syntax.Should not be empty" time="0.0016" asserts="0" success="True" result="Success" executed="True" />
                              <test-case description="Should be syntactically valid" name="Static Tests.Module Layout.Function Files.Assert-ValidCGRegex.Syntax.Should be syntactically valid" time="0.0015" asserts="0" success="True" result="Success" executed="True" />
                            </results>
                          </test-suite>
                          <test-suite type="TestFixture" name="Static Tests.Module Layout.Function Files.Assert-ValidCGRegex.Structure" executed="True" result="Ignored" success="True" time="0.0198" asserts="0" description="Static Tests.Module Layout.Function Files.Assert-ValidCGRegex.Structure">
                            <results>
                              <test-case description="Should contain no named blocks" name="Static Tests.Module Layout.Function Files.Assert-ValidCGRegex.Structure.Should contain no named blocks" time="0.0035" asserts="0" success="True" result="Success" executed="True" />
                              <test-case description="Should contain a single function definition, named &quot;Assert-ValidCGRegex&quot;" name="Static Tests.Module Layout.Function Files.Assert-ValidCGRegex.Structure.Should contain a single function definition, named &quot;Assert-ValidCGRegex&quot;" time="0.0024" asserts="0" success="True" result="Success" executed="True" />
                              <test-case description="Should have comment-based help [Public functions only]" name="Static Tests.Module Layout.Function Files.&lt;name&gt;.Structure.Should have comment-based help [Public functions only]" time="0.0016" asserts="0" success="False" result="Ignored" executed="False" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>