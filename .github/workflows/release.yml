name: Publish Release
on:
  push:
    branches:
      - "release/**"
      - "hotfix/**"
      - "main"

jobs:
  prerelease_version:
    name: "Calculate Prerelease Version"
    runs-on: windows-latest
    if: ${{ startsWith(github.ref_name, 'release/') || startsWith(github.ref_name, 'hotfix/') }}
    outputs:
      PrereleaseString: ${{ steps.new_prerelease.outputs.NewPrerelease }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Get Previous Prerelease"
        id: previous_prerelease
        shell: pwsh
        run: |
          $ModuleVersion = (Import-PowerShellDataFile -Path .\ConvertFrom-RegEx\ConvertFrom-RegEx.psd1).ModuleVersion
          $Tags = git tag -l $("v{0}-rc*" -f $ModuleVersion)
          $PrereleaseVersions = $Tags | % {[semver](($_ -replace '^v',''))}
          $LatestPrerelease = $PrereleaseVersions | ? PreReleaseLabel -like '^rc\d+$'| Sort -Descending | Select -first 1 | % PreReleaseLabel
          Write-Host "::set-output name=LatestPrerelease::$LatestPrerelease"
      - name: "Calculate New Prerelease"
        id: new_prerelease
        shell: pwsh
        env:
          LATEST_PRERELEASE: ${{ steps.previous_prerelease.outputs.LatestPrerelease }}
        run: |
          $PreviousPrerelease = $env:LATEST_PRERELEASE
          $PrereleaseCount = ($PreviousPrerelease -replace '^rc','') -as [int]
          $NewPrerelease = 'rc{0:D2}' -f ($PrereleaseCount + 1)
          Write-Host "::set-output name=NewPrerelease::$NewPrerelease"
  package:
    name: "Package module"
    runs-on: windows-latest
    needs: prerelease_version
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: "Set Prerelease String"
        if: ${{ needs.prerelease_version.outputs.PrereleaseString }}
        shell: pwsh
        env:
          PRERELEASE_STRING: ${{ needs.prerelease_version.outputs.PrereleaseString }}
        run: |
          Update-ModuleManifest -Path .\ConvertFrom-RegEx\ConvertFrom-RegEx.psd1 -Prerelease $env:PRERELEASE_STRING
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v3
        with:
          name: module
          path: .\ConvertFrom-RegEx\**
          if-no-files-found: error


  


