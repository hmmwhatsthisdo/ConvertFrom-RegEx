name: Release Preparation
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - 'main'

jobs:
  match_versions:
    name: Check Branch/Manifest version
    runs-on: windows-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - shell: pwsh
        name: Get Manifest Version
        id: module-manifest-version
        run: |
          $ModuleVersion = (Import-PowerShellDataFile -Path .\ConvertFrom-RegEx\ConvertFrom-RegEx.psd1).ModuleVersion
          Write-Host "::set-output name=ModuleVersion::$ModuleVersion"
      - name: Ensure Branch Version Match
        uses: actions/github-script@v6
        if: "${{github.event.pull_request.base.ref != format('release/{0}', steps.module-manifest-version.output.ModuleVersion)}}"
        with:
          script: |
            core.setFailed('Version in base branch name (${{ github.event.pull_request.base.ref }}) and manifest ${{ steps.module-manifest-version.output.ModuleVersion }} do not match.')